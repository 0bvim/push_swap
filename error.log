==59759== Memcheck, a memory error detector
==59759== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==59759== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==59759== Command: ./push_swap 
==59759== 
==59759== Invalid read of size 8
==59759==    at 0x40122C: UnknownInlinedFun (fill_stack.c:43)
==59759==    by 0x40122C: main (main.c:23)
==59759==  Address 0x10 is not stack'd, malloc'd or (recently) free'd
==59759== 
==59759== 
==59759== Process terminating with default action of signal 11 (SIGSEGV)
==59759==  Access not within mapped region at address 0x10
==59759==    at 0x40122C: UnknownInlinedFun (fill_stack.c:43)
==59759==    by 0x40122C: main (main.c:23)
==59759==  If you believe this happened as a result of a stack
==59759==  overflow in your program's main thread (unlikely but
==59759==  possible), you can try to increase the size of the
==59759==  main thread stack using the --main-stacksize= flag.
==59759==  The main thread stack size used in this run was 8388608.
==59759== 
==59759== HEAP SUMMARY:
==59759==     in use at exit: 24 bytes in 1 blocks
==59759==   total heap usage: 2 allocs, 1 frees, 32 bytes allocated
==59759== 
==59759== 24 bytes in 1 blocks are still reachable in loss record 1 of 1
==59759==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==59759==    by 0x4011C5: UnknownInlinedFun (init_stack.c:19)
==59759==    by 0x4011C5: main (main.c:22)
==59759== 
==59759== LEAK SUMMARY:
==59759==    definitely lost: 0 bytes in 0 blocks
==59759==    indirectly lost: 0 bytes in 0 blocks
==59759==      possibly lost: 0 bytes in 0 blocks
==59759==    still reachable: 24 bytes in 1 blocks
==59759==         suppressed: 0 bytes in 0 blocks
==59759== 
==59759== For lists of detected and suppressed errors, rerun with: -s
==59759== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
